{"version":3,"file":"static/js/204.6d6cfb07.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Title/Title.module.scss?ae23","components/Title/Title.tsx","webpack://my-app/./src/pages/Experience/Experience.module.scss?dfd8","pages/Experience/ExperienceBlock/ExperienceBlock.tsx","pages/Experience/JobBlock/JobBlock.tsx","pages/Experience/Experience.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__QcDvM\",\"textCenter\":\"Title_textCenter__6ev1L\"};","import style from './Title.module.scss'\r\nimport React from 'react';\r\n\r\n\r\nexport const Title: React.FC<TitlePropsType> = ({title}) => {\r\n    return <>\r\n        <div className={style.title}>\r\n            <h2>{title}</h2>\r\n            <div className={style.textCenter}>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\n//types\r\ntype TitlePropsType = {\r\n    title: string\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"experience\":\"Experience_experience__yMIaC\",\"experienceContainer\":\"Experience_experienceContainer__SlUXz\",\"inner\":\"Experience_inner__-EmvY\",\"experienceBlock\":\"Experience_experienceBlock__gJRmZ\",\"number\":\"Experience_number__FHfK7\",\"subTitle\":\"Experience_subTitle__ktFHg\",\"jobs\":\"Experience_jobs__4h6AM\",\"jobBlock\":\"Experience_jobBlock__8-PWo\",\"headerJob\":\"Experience_headerJob__adze0\",\"headerJobName\":\"Experience_headerJobName__NHnt-\",\"company\":\"Experience_company__2m5Gr\",\"sumTime\":\"Experience_sumTime__eaUKv\",\"jobPositions\":\"Experience_jobPositions__dztwa\",\"position\":\"Experience_position__t-BtY\",\"workingPosition\":\"Experience_workingPosition__dDlhB\",\"posWorkTimes\":\"Experience_posWorkTimes__Zjyzf\",\"workPositionTime\":\"Experience_workPositionTime__+YluY\",\"workTime\":\"Experience_workTime__2xgRQ\",\"tasks\":\"Experience_tasks__FKJbJ\"};","import React, {useEffect, useRef, useState} from \"react\";\r\nimport style from \"../Experience.module.scss\";\r\n\r\nexport const ExperienceBlock: React.FC<ExperienceBlockType> = ({endValue, interval, subTitle}) => {\r\n\r\n  const [value, setValue] = useState<number>(0);\r\n  const duration = interval / endValue;\r\n\r\n  const experienceBlockRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let counter: NodeJS.Timer;\r\n    const blockElement = experienceBlockRef.current;\r\n    const observer = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        counter = setInterval(() => {\r\n          setValue((prevState) => {\r\n            if (prevState < endValue) {\r\n              return prevState + 1;\r\n            } else {\r\n              clearInterval(counter);\r\n              return prevState;\r\n            }\r\n          });\r\n        }, duration);\r\n      } else {\r\n        clearInterval(counter);\r\n        setValue(0);\r\n      }\r\n    }, {rootMargin: \"0px\", threshold: 0.1});\r\n\r\n    if (blockElement) {\r\n      observer.observe(blockElement);\r\n    }\r\n\r\n    return () => {\r\n      if (blockElement) {\r\n        observer.unobserve(blockElement);\r\n      }\r\n      clearInterval(counter);\r\n    }\r\n  }, [endValue, duration]);\r\n\r\n  return (\r\n    <div className={style.experienceBlock} ref={experienceBlockRef}>\r\n      <p className={style.number}>{value}+</p>\r\n      <p className={style.subTitle}>{subTitle}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n//types\r\ntype ExperienceBlockType = {\r\n  theme?: string\r\n  endValue: number\r\n  interval: number\r\n  subTitle: string\r\n}","import React from \"react\";\r\nimport style from \"../Experience.module.scss\";\r\nimport {ImageComponent} from \"../../../components/ImageComponent\";\r\n\r\nexport const JobBlock: React.FC<JobBlockType> = ({logo, company, sumTime, positions}) => {\r\n\r\n  return <div className={style.jobBlock}>\r\n    <div className={style.headerJob}>\r\n      <ImageComponent src={logo}/>\r\n      <div className={style.headerJobName}>\r\n        <p className={style.company}>{company}</p>\r\n        <p className={style.sumTime}>{sumTime}</p>\r\n      </div>\r\n    </div>\r\n    <div className={style.jobPositions}>\r\n      {positions.map((position, index) => <Position\r\n        key={index}\r\n        type={position.type}\r\n        tasks={position.tasks}\r\n        workingPosition={position.workingPosition}\r\n        workPositionTime={position.workPositionTime}\r\n        workTime={position.workTime}\r\n      />)}\r\n    </div>\r\n  </div>;\r\n};\r\n\r\nconst Position: React.FC<PositionType> = ({workingPosition, type, workPositionTime, tasks, workTime}) => {\r\n\r\n  return <div className={style.position}>\r\n    <span></span>\r\n    <p className={style.workingPosition}>{workingPosition}</p>\r\n    <p className={style.type}>{type}</p>\r\n    <div className={style.posWorkTimes}>\r\n      <p className={style.workPositionTime}>{workPositionTime}</p>\r\n      <p className={style.workTime}>{workTime}</p>\r\n    </div>\r\n    <p className={style.tasks}>{tasks}</p>\r\n  </div>;\r\n};\r\n\r\n//types\r\ntype JobBlockType = {\r\n  logo: string\r\n  company: string\r\n  sumTime: string\r\n  positions: Array<PositionType>\r\n}\r\n\r\ntype PositionType = {\r\n  workingPosition: string,\r\n  type: string,\r\n  workTime: string,\r\n  workPositionTime: string,\r\n  tasks: string,\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from \"./Experience.module.scss\";\r\nimport styleContainer from \"../../styles/Container.module.css\";\r\nimport {Title} from \"../../components/Title/Title\";\r\nimport {ExperienceBlock} from \"./ExperienceBlock/ExperienceBlock\";\r\nimport {JobBlock} from \"./JobBlock/JobBlock\";\r\nimport katek from \"../../assets/images/katek_logo.png\"\r\nimport advin from \"../../assets/images/advin_logo.jpg\"\r\nimport linerock from \"../../assets/images/linerock_logo.jpg\"\r\n\r\nconst blockData = [\r\n  {theme: \"Projects\", interval: 1000, endValue: 10, subTitle: \"Successful realized projects.\"},\r\n  {\r\n    theme: \"Years\",\r\n    interval: 1000,\r\n    endValue: new Date().getFullYear() - 2021,\r\n    subTitle: \"Years commercial work experience.\"\r\n  },\r\n  {theme: \"Features\", interval: 1000, endValue: 45, subTitle: \"Implemented features.\"},\r\n];\r\n\r\nconst jobs = [\r\n  {\r\n    logo: linerock,\r\n    company: \"LINEROCK INVESTMENTS\",\r\n    sumTime: \"6 mo\",\r\n    positions: [\r\n      {\r\n        workingPosition: \"Frontend developer\",\r\n        type: \"Remote\",\r\n        workPositionTime: \"Nov 2023 - Apr 2024\",\r\n        workTime: \"6 mo\",\r\n        tasks: \"Work in highly loaded and popular applications photolab and toonme with more than 400 million downloads, react class components, styled components, fix bugs, adaptive layout.\",\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    logo: advin,\r\n    company: \"ADVIN SMART FACTORY\",\r\n    sumTime: \"2 yr 1 mo\",\r\n    positions: [\r\n      {\r\n        workingPosition: \"JavaScript engineer (MEVN)\",\r\n        type: \"Full-time\",\r\n        workPositionTime: \"Oct 2022 - Oct 2023\",\r\n        workTime: \"1 yr 1 mo\",\r\n        tasks: \"Supporting of existing functional, development of new functionality, integration of third-party services ,CRUD from UI to database (Mongo, SQL).\",\r\n      },\r\n      {\r\n        workingPosition: \"Frontend developer\",\r\n        type: \"Full-time\",\r\n        workPositionTime: \"Nov 2021 - Oct 2022\",\r\n        workTime: \"1 yr\",\r\n        tasks: \"Creating of universal components, login forms and universal models ,application architecture organization (UI, BLL, DAL) ,Github collaboration experience.\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    logo: katek,\r\n    company: \"KATEK\",\r\n    sumTime: \"1 yr\",\r\n    positions: [\r\n      {\r\n        workingPosition: \"Frontend developer\",\r\n        type: \"Full-time\",\r\n        workPositionTime: \"Nov 2020 - Oct 2021\",\r\n        workTime: \"1 yr\",\r\n        tasks: \"Creating of universal components, login forms and universal models.\",\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\nexport const Experience = () => {\r\n\r\n  return (\r\n    <>\r\n      <div className={style.experience}>\r\n        <div className={`${styleContainer.container} ${style.experienceContainer}`}>\r\n          <Title title=\"Experience\"/>\r\n          <div className={style.inner}>\r\n            {blockData.map((block, index) => <ExperienceBlock\r\n                key={index}\r\n                theme={block.theme}\r\n                interval={block.interval}\r\n                endValue={block.endValue}\r\n                subTitle={block.subTitle}\r\n              />\r\n            )}\r\n          </div>\r\n          <h2>Companies list:</h2>\r\n          <div className={style.jobs}>\r\n            {jobs.map((job, index) => <JobBlock\r\n              key={index}\r\n              logo={job.logo}\r\n              company={job.company}\r\n              sumTime={job.sumTime}\r\n              positions={job.positions}\r\n            />)}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n//types\r\n"],"names":["Title","_ref","title","_jsx","_Fragment","children","_jsxs","className","style","ExperienceBlock","endValue","interval","subTitle","value","setValue","useState","duration","experienceBlockRef","useRef","useEffect","counter","blockElement","current","observer","IntersectionObserver","entries","isIntersecting","setInterval","prevState","clearInterval","rootMargin","threshold","observe","unobserve","experienceBlock","ref","number","JobBlock","logo","company","sumTime","positions","jobBlock","headerJob","ImageComponent","src","headerJobName","jobPositions","map","position","index","Position","type","tasks","workingPosition","workPositionTime","workTime","_ref2","posWorkTimes","blockData","theme","Date","getFullYear","jobs","Experience","experience","concat","styleContainer","container","experienceContainer","inner","block","job"],"sourceRoot":""}